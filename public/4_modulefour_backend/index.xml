<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Building the Backend on English</title>
    <link>//localhost:62373/4_modulefour_backend.html</link>
    <description>Recent content in Building the Backend on English</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="//localhost:62373/4_modulefour_backend/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build Dropdown APIs</title>
      <link>//localhost:62373/4_modulefour_backend/01_dropdownapis.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62373/4_modulefour_backend/01_dropdownapis.html</guid>
      <description>&lt;h1 id=&#34;build-dropdown-apis&#34;&gt;Build Dropdown APIs&lt;/h1&gt;&#xA;&lt;p&gt;In this section, we&amp;rsquo;ll create two APIs to populate the filter dropdowns with paper categories and locations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;paper-categories-api&#34;&gt;Paper Categories API&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the API Builder Tool (CMD/CTRL + U)&lt;/li&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Add new API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Search for the integration to your database (AWS RDS if applicable)&lt;/li&gt;&#xA;&lt;li&gt;Copy and paste the below SQL inside the Superblocks editor:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; category_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; dm_operations.inventory;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Run API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Click the pencil icon next to &amp;lsquo;API1&amp;rsquo; and rename it to &amp;ldquo;get_papercategories&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;location-data-api&#34;&gt;Location Data API&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Add new API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Search for the integration to your database (same integration as the Paper Categories API)&lt;/li&gt;&#xA;&lt;li&gt;Copy and paste the below SQL inside the Superblocks editor:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DISTINCT&lt;/span&gt; location_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; dm_operations.inventory;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Run API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Click the pencil icon next to &amp;lsquo;API1&amp;rsquo; and rename it to &amp;ldquo;get_locations&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;connect-apis-to-dropdown-components&#34;&gt;Connect APIs to Dropdown Components&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hide the API Builder Tool (CMD/CTRL + U)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating the Inventory Data API</title>
      <link>//localhost:62373/4_modulefour_backend/02_inventoryapi.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62373/4_modulefour_backend/02_inventoryapi.html</guid>
      <description>&lt;h1 id=&#34;creating-the-inventory-data-api&#34;&gt;Creating the Inventory Data API&lt;/h1&gt;&#xA;&lt;p&gt;In this section, we&amp;rsquo;ll build a dynamic API that handles inventory data filtering based on their dropdown selections.&lt;/p&gt;&#xA;&lt;h2 id=&#34;inventory-api&#34;&gt;Inventory API&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the API Builder Tool (CMD/CTRL + U)&lt;/li&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Add new API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Search for the integration to your database (AWS RDS if applicable)&lt;/li&gt;&#xA;&lt;li&gt;Add the below SQL and click &amp;ldquo;Run API&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; dm_operations.inventory&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{{&lt;/span&gt;Dropdown1&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;.selectedOptionValue &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; category_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{{&lt;/span&gt;Dropdown1&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;.selectedOptionValue &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{{&lt;/span&gt;Dropdown2&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;.selectedOptionValue &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; location_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{{&lt;/span&gt;Dropdown2&lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;.selectedOptionValue &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}}&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Click the pencil icon next the API name and rename it to &amp;ldquo;get_inventory_data&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;div class=&#34;notices tip&#34; &gt;&lt;p&gt;The values Dropdown1 and Dropdown2 must equal the dropdown component names in the Properties panel in order for the python step to work. If you renamed those components, update the python step code to match the new names.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Implementing the Hero Stats APIs</title>
      <link>//localhost:62373/4_modulefour_backend/03_herostatsapis.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62373/4_modulefour_backend/03_herostatsapis.html</guid>
      <description>&lt;h1 id=&#34;implementing-the-hero-stats-apis&#34;&gt;Implementing the Hero Stats APIs&lt;/h1&gt;&#xA;&lt;p&gt;In this section, we&amp;rsquo;ll create APIs to power the hero stats section and use the Parallel block to run sets of API blocks at the same time. This is a powerful block that unlocks the ability to parallelize work in your APIs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;hero-stats-api&#34;&gt;Hero Stats API&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the API Builder Tool (CMD/CTRL + U)&lt;/li&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Add new API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Hover over &amp;ldquo;Control Blocks&amp;rdquo; and click &amp;ldquo;Run Parallel&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Click the pencil icon next to &amp;lsquo;API1&amp;rsquo; and rename the API to &amp;ldquo;get_herostats&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;configure-paths&#34;&gt;Configure Paths&lt;/h2&gt;&#xA;&lt;p&gt;With a parallel control block, you can run multiple API blocks at the same time. This is a powerful feature that allows you to parallelize work in your APIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating Plotly Visualization APIs</title>
      <link>//localhost:62373/4_modulefour_backend/04_plotlyapis.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:62373/4_modulefour_backend/04_plotlyapis.html</guid>
      <description>&lt;h1 id=&#34;creating-plotly-visualization-apis&#34;&gt;Creating Plotly Visualization APIs&lt;/h1&gt;&#xA;&lt;p&gt;In this section, we&amp;rsquo;ll create two APIs that generate Plotly charts for our dashboard: a location-based sales chart and a monthly trends chart.&lt;/p&gt;&#xA;&lt;h2 id=&#34;location-sales-chart-api&#34;&gt;Location Sales Chart API&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the API Builder Tool (CMD/CTRL + U)&lt;/li&gt;&#xA;&lt;li&gt;Click &amp;ldquo;Add new API&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;Search for the database integration&lt;/li&gt;&#xA;&lt;li&gt;Click the pencil icon next to &amp;lsquo;API1&amp;rsquo; and rename the API to &amp;ldquo;location_chart&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Add the below SQL to the database integration:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; location_name, &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(total_amount) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; total_sales&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; dm_operations.sales&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; location_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; total_sales &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add a Python Function Step and add the below code:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
